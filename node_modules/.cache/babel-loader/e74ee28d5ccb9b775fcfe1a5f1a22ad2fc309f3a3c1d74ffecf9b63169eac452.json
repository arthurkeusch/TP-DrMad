{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport { bankaccounts, items, shopusers, transactions } from './data';\nimport { v4 as uuidv4 } from 'uuid';\nfunction shopLogin(data) {\n  if (!data.login || !data.password) return {\n    error: 1,\n    status: 404,\n    data: 'aucun login/pass fourni'\n  };\n  var user = shopusers.find(function (e) {\n    return e.login === data.login;\n  });\n  if (!user) return {\n    error: 1,\n    status: 404,\n    data: 'login/pass incorrect'\n  };\n  if (!user.uuid) user.uuid = uuidv4();\n  return {\n    error: 0,\n    status: 200,\n    data: user\n  };\n}\nfunction getAllViruses() {\n  return {\n    error: 0,\n    data: items\n  };\n}\nfunction getAccountAmount(number) {\n  if (!number) return {\n    error: 1,\n    status: 404,\n    data: 'aucun numéro de compte bancaire fourni'\n  };\n  var account = bankaccounts.find(function (a) {\n    return a.number === number;\n  });\n  if (!account) return {\n    error: 1,\n    status: 404,\n    data: 'numéro de compte bancaire incorrect'\n  };\n  return {\n    error: 0,\n    status: 200,\n    data: account.amount\n  };\n}\nfunction getAccountTransactions(number) {\n  if (!number) return {\n    error: 1,\n    status: 404,\n    data: 'aucun numéro de compte bancaire fourni'\n  };\n  var account = bankaccounts.find(function (a) {\n    return a.number === number;\n  });\n  if (!account) return {\n    error: 1,\n    status: 404,\n    data: 'numéro de compte bancaire incorrect'\n  };\n  var trans = transactions.filter(function (t) {\n    return t.account === account._id;\n  });\n  return {\n    error: 0,\n    status: 200,\n    data: trans\n  };\n}\nfunction getAccount(number) {\n  if (!number) return {\n    error: 1,\n    status: 404,\n    data: 'aucun numéro de compte bancaire fourni'\n  };\n  var account = bankaccounts.find(function (a) {\n    return a.number === number;\n  });\n  if (!account) return {\n    error: 1,\n    status: 404,\n    data: 'numéro de compte bancaire incorrect'\n  };\n  return account;\n}\nfunction getTransactions(id_account) {\n  if (!id_account) return {\n    error: 1,\n    status: 404,\n    data: 'aucun numéro de compte bancaire fourni'\n  };\n  var transAccount = transactions.find(function (a) {\n    return a.account === id_account;\n  });\n  var transDest = transactions.find(function (a) {\n    return a.destination === id_account;\n  });\n  if (!transAccount && !transDest) return {\n    error: 1,\n    status: 404,\n    data: 'aucune transaction pour ce compte'\n  };\n}\nfunction createWithdraw(id_account, amount) {\n  if (!id_account) return {\n    error: 1,\n    status: 404,\n    data: 'aucun numéro de compte bancaire fourni'\n  };\n  var account = bankaccounts.find(function (a) {\n    return a._id === id_account;\n  });\n  if (!account) return {\n    error: 1,\n    status: 404,\n    data: 'numéro de compte bancaire incorrect'\n  };\n  var newTrans = {\n    _id: generateId(),\n    amount: -amount,\n    account: id_account,\n    date: {\n      $date: new Date().toISOString()\n    },\n    uuid: uuidv4()\n  };\n  account.amount -= amount;\n  var updatedAccountIndex = bankaccounts.findIndex(function (a) {\n    return a._id === id_account;\n  });\n  bankaccounts[updatedAccountIndex].amount = account.amount;\n  transactions.push(newTrans);\n  return {\n    error: 0,\n    status: 200,\n    data: {\n      uuid: newTrans.uuid,\n      amount: account.amount\n    }\n  };\n}\nfunction generateId() {\n  var byteArray = new Uint8Array(12);\n  window.crypto.getRandomValues(byteArray);\n  return Array.from(byteArray).map(function (_byte) {\n    return _byte.toString(16).padStart(2, '0');\n  }).join('');\n}\nfunction createPayment(id_account, amount, destination) {\n  if (!id_account) return {\n    error: 1,\n    status: 404,\n    data: 'aucun numéro de compte bancaire fourni'\n  };\n  var account = bankaccounts.find(function (a) {\n    return a._id === id_account;\n  });\n  if (!account) return {\n    error: 1,\n    status: 404,\n    data: 'numéro de compte bancaire incorrect'\n  };\n  var destAccount = bankaccounts.find(function (a) {\n    return a._id === destination;\n  });\n  if (!destAccount) return {\n    error: 1,\n    status: 404,\n    data: 'compte destinataire inexistant'\n  };\n  var newTrans = {\n    _id: generateId(),\n    amount: amount,\n    account: id_account,\n    destination: destination,\n    date: {\n      $date: new Date().toISOString()\n    },\n    uuid: uuidv4()\n  };\n  account.amount -= amount;\n  destAccount.amount += amount;\n  var updatedAccountIndex = bankaccounts.findIndex(function (a) {\n    return a._id === id_account;\n  });\n  var updatedDestAccountIndex = bankaccounts.findIndex(function (a) {\n    return a._id === destination;\n  });\n  bankaccounts[updatedAccountIndex].amount = account.amount;\n  bankaccounts[updatedDestAccountIndex].amount = destAccount.amount;\n  transactions.push(newTrans);\n  return {\n    error: 0,\n    status: 200,\n    data: {\n      uuid: newTrans.uuid,\n      amount: account.amount\n    }\n  };\n}\nexport default {\n  shopLogin: shopLogin,\n  getAllViruses: getAllViruses,\n  getAccountAmount: getAccountAmount,\n  getAccountTransactions: getAccountTransactions,\n  getAccount: getAccount,\n  getTransactions: getTransactions,\n  createWithdraw: createWithdraw,\n  createPayment: createPayment\n};","map":{"version":3,"names":["bankaccounts","items","shopusers","transactions","v4","uuidv4","shopLogin","data","login","password","error","status","user","find","e","uuid","getAllViruses","getAccountAmount","number","account","a","amount","getAccountTransactions","trans","filter","t","_id","getAccount","getTransactions","id_account","transAccount","transDest","destination","createWithdraw","newTrans","generateId","date","$date","Date","toISOString","updatedAccountIndex","findIndex","push","byteArray","Uint8Array","window","crypto","getRandomValues","Array","from","map","byte","toString","padStart","join","createPayment","destAccount","updatedDestAccountIndex"],"sources":["/home/arthur/Documents/GitHub/TP-DrMad/src/datasource/controller.js"],"sourcesContent":["import {bankaccounts, items, shopusers, transactions} from './data';\nimport {v4 as uuidv4} from 'uuid';\n\nfunction shopLogin(data) {\n  if ((!data.login) || (!data.password)) return {error: 1, status: 404, data: 'aucun login/pass fourni'};\n  let user = shopusers.find(e => e.login === data.login);\n  if (!user) return {error: 1, status: 404, data: 'login/pass incorrect'};\n  if (!user.uuid) user.uuid = uuidv4();\n  return {error: 0, status: 200, data: user};\n}\n\nfunction getAllViruses() {\n  return {error: 0, data: items};\n}\n\nfunction getAccountAmount(number) {\n  if (!number) return {error: 1, status: 404, data: 'aucun numéro de compte bancaire fourni'};\n  let account = bankaccounts.find(a => a.number === number);\n  if (!account) return {error: 1, status: 404, data: 'numéro de compte bancaire incorrect'};\n  return {error: 0, status: 200, data: account.amount};\n}\n\nfunction getAccountTransactions(number) {\n  if (!number) return {error: 1, status: 404, data: 'aucun numéro de compte bancaire fourni'};\n  let account = bankaccounts.find(a => a.number === number);\n  if (!account) return {error: 1, status: 404, data: 'numéro de compte bancaire incorrect'};\n  let trans = transactions.filter(t => t.account === account._id);\n  return {error: 0, status: 200, data: trans};\n}\n\nfunction getAccount(number){\n  if (!number) return {error: 1, status: 404, data: 'aucun numéro de compte bancaire fourni'};\n  let account = bankaccounts.find(a => a.number === number);\n  if (!account) return {error: 1, status: 404, data: 'numéro de compte bancaire incorrect'};\n  return account;\n}\n\nfunction getTransactions(id_account){\n  if (!id_account) return {error: 1, status: 404, data: 'aucun numéro de compte bancaire fourni'};\n  let transAccount = transactions.find(a => a.account === id_account);\n  let transDest = transactions.find(a => a.destination === id_account);\n  if (!transAccount && !transDest) return {error: 1, status: 404, data: 'aucune transaction pour ce compte'};\n}\n\nfunction createWithdraw(id_account, amount) {\n  if (!id_account) return { error: 1, status: 404, data: 'aucun numéro de compte bancaire fourni' };\n  let account = bankaccounts.find(a => a._id === id_account);\n  if (!account) return { error: 1, status: 404, data: 'numéro de compte bancaire incorrect' };\n  let newTrans = {\n    _id: generateId(),\n    amount: -amount,\n    account: id_account,\n    date: { $date: new Date().toISOString() },\n    uuid: uuidv4()\n  };\n  account.amount -= amount;\n  let updatedAccountIndex = bankaccounts.findIndex(a => a._id === id_account);\n  bankaccounts[updatedAccountIndex].amount = account.amount;\n  transactions.push(newTrans);\n  return { error: 0, status: 200, data: { uuid: newTrans.uuid, amount: account.amount } };\n}\n\nfunction generateId() {\n  const byteArray = new Uint8Array(12);\n  window.crypto.getRandomValues(byteArray);\n  return Array.from(byteArray).map(byte => byte.toString(16).padStart(2, '0')).join('');\n}\n\nfunction createPayment(id_account, amount, destination) {\n  if (!id_account) return { error: 1, status: 404, data: 'aucun numéro de compte bancaire fourni' };\n  let account = bankaccounts.find(a => a._id === id_account);\n  if (!account) return { error: 1, status: 404, data: 'numéro de compte bancaire incorrect' };\n  let destAccount = bankaccounts.find(a => a._id === destination);\n  if (!destAccount) return { error: 1, status: 404, data: 'compte destinataire inexistant' };\n  let newTrans = {\n    _id: generateId(),\n    amount: amount,\n    account: id_account,\n    destination: destination,\n    date: { $date: new Date().toISOString() },\n    uuid: uuidv4()\n  };\n  account.amount -= amount;\n  destAccount.amount += amount;\n  let updatedAccountIndex = bankaccounts.findIndex(a => a._id === id_account);\n  let updatedDestAccountIndex = bankaccounts.findIndex(a => a._id === destination);\n  bankaccounts[updatedAccountIndex].amount = account.amount;\n  bankaccounts[updatedDestAccountIndex].amount = destAccount.amount;\n  transactions.push(newTrans);\n  return { error: 0, status: 200, data: { uuid: newTrans.uuid, amount: account.amount } };\n}\n\nexport default{\n  shopLogin,\n  getAllViruses,\n  getAccountAmount,\n  getAccountTransactions,\n  getAccount,\n  getTransactions,\n  createWithdraw,\n  createPayment\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}