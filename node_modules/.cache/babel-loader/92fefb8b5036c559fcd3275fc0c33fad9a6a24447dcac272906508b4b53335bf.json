{"ast":null,"code":"import { computed, ref, watch } from 'vue';\n\n// Propriété réactive pour stocker le solde\n\nexport default {\n  __name: 'BankAmount',\n  setup(__props) {\n    const balance = ref(0);\n\n    // Mise à jour de la propriété réactive en réponse aux changements de solde\n    watch(() => this.$store.state.accountAmount, newBalance => {\n      balance.value = newBalance;\n    });\n\n    // Propriété calculée pour formater le solde avec le symbole €\n    const formattedAmount = computed(() => {\n      const amount = balance.value;\n      const formatted = new Intl.NumberFormat('fr-FR', {\n        style: 'currency',\n        currency: 'EUR'\n      }).format(amount);\n\n      // Appliquer la couleur en fonction de la positivité/négativité\n      const colorStyle = amount >= 0 ? 'color: green;' : 'color: red;';\n      return `<input style=\"border: none; background: none; ${colorStyle}\" value=\"${formatted}\" readonly>`;\n    });\n    return {\n      __sfc: true,\n      balance,\n      formattedAmount\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","watch","balance","$store","state","accountAmount","newBalance","value","formattedAmount","amount","formatted","Intl","NumberFormat","style","currency","format","colorStyle"],"sources":["BankAmount.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      <slot name=\"account-amount\" :content=\"formattedAmount\"></slot>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport {computed, ref, watch} from 'vue';\n\n// Propriété réactive pour stocker le solde\nconst balance = ref(0);\n\n// Mise à jour de la propriété réactive en réponse aux changements de solde\nwatch(\n    () => this.$store.state.accountAmount,\n    (newBalance) => {\n      balance.value = newBalance;\n    }\n);\n\n// Propriété calculée pour formater le solde avec le symbole €\nconst formattedAmount = computed(() => {\n  const amount = balance.value;\n  const formatted = new Intl.NumberFormat('fr-FR', {\n    style: 'currency',\n    currency: 'EUR',\n  }).format(amount);\n\n  // Appliquer la couleur en fonction de la positivité/négativité\n  const colorStyle = amount >= 0 ? 'color: green;' : 'color: red;';\n\n  return `<input style=\"border: none; background: none; ${colorStyle}\" value=\"${formatted}\" readonly>`;\n});\n</script>"],"mappings":"AASA,SAAQA,QAAQ,EAAEC,GAAG,EAAEC,KAAK,QAAO,KAAK;;AAExC;;;;;IACA,MAAMC,OAAO,GAAGF,GAAG,CAAC,CAAC,CAAC;;IAEtB;IACAC,KAAK,CACD,MAAM,IAAI,CAACE,MAAM,CAACC,KAAK,CAACC,aAAa,EACpCC,UAAU,IAAK;MACdJ,OAAO,CAACK,KAAK,GAAGD,UAAU;IAC5B,CACJ,CAAC;;IAED;IACA,MAAME,eAAe,GAAGT,QAAQ,CAAC,MAAM;MACrC,MAAMU,MAAM,GAAGP,OAAO,CAACK,KAAK;MAC5B,MAAMG,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;QAC/CC,KAAK,EAAE,UAAU;QACjBC,QAAQ,EAAE;MACZ,CAAC,CAAC,CAACC,MAAM,CAACN,MAAM,CAAC;;MAEjB;MACA,MAAMO,UAAU,GAAGP,MAAM,IAAI,CAAC,GAAG,eAAe,GAAG,aAAa;MAEhE,OAAQ,iDAAgDO,UAAW,YAAWN,SAAU,aAAY;IACtG,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}