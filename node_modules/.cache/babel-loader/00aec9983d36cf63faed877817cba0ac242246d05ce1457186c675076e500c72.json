{"ast":null,"code":"import _regeneratorRuntime from \"/home/arthur/Documents/GitHub/TP-DrMad/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/arthur/Documents/GitHub/TP-DrMad/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport LocalSource from \"@/datasource/controller\";\nfunction shopLoginFromLocalSource(_x) {\n  return _shopLoginFromLocalSource.apply(this, arguments);\n}\nfunction _shopLoginFromLocalSource() {\n  _shopLoginFromLocalSource = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", LocalSource.shopLogin(data));\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _shopLoginFromLocalSource.apply(this, arguments);\n}\nfunction shopLogin(_x2) {\n  return _shopLogin.apply(this, arguments);\n}\nfunction _shopLogin() {\n  _shopLogin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return shopLoginFromLocalSource(data);\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _shopLogin.apply(this, arguments);\n}\nfunction getAllVirusesFromLocalSource() {\n  return _getAllVirusesFromLocalSource.apply(this, arguments);\n}\nfunction _getAllVirusesFromLocalSource() {\n  _getAllVirusesFromLocalSource = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", LocalSource.getAllViruses());\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _getAllVirusesFromLocalSource.apply(this, arguments);\n}\nfunction getAllViruses() {\n  return _getAllViruses.apply(this, arguments);\n}\nfunction _getAllViruses() {\n  _getAllViruses = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return getAllVirusesFromLocalSource();\n        case 2:\n          return _context4.abrupt(\"return\", _context4.sent);\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return _getAllViruses.apply(this, arguments);\n}\nexport default {\n  shopLogin: shopLogin,\n  getAllViruses: getAllViruses\n};","map":{"version":3,"names":["LocalSource","shopLoginFromLocalSource","_x","_shopLoginFromLocalSource","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_callee$","_context","prev","next","abrupt","shopLogin","stop","_x2","_shopLogin","_callee2","_callee2$","_context2","sent","getAllVirusesFromLocalSource","_getAllVirusesFromLocalSource","_callee3","_callee3$","_context3","getAllViruses","_getAllViruses","_callee4","_callee4$","_context4"],"sources":["/home/arthur/Documents/GitHub/TP-DrMad/src/services/shop.service.js"],"sourcesContent":["import LocalSource from \"@/datasource/controller\";\n\nasync function shopLoginFromLocalSource(data) {\n  return LocalSource.shopLogin(data)\n}\nasync function shopLogin(data) {\n  return await shopLoginFromLocalSource(data);\n}\n\n\n\n\nasync function getAllVirusesFromLocalSource() {\n  return LocalSource.getAllViruses()\n}\nasync function getAllViruses() {\n  return await getAllVirusesFromLocalSource()\n}\n\n\n\n\nexport default {\n  shopLogin,\n  getAllViruses,\n}"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,yBAAyB;AAAC,SAEnCC,wBAAwBA,CAAAC,EAAA;EAAA,OAAAC,yBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,0BAAA;EAAAA,yBAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAvC,SAAAC,QAAwCC,IAAI;IAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,OAAAF,QAAA,CAAAG,MAAA,WACnChB,WAAW,CAACiB,SAAS,CAACP,IAAI,CAAC;QAAA;QAAA;UAAA,OAAAG,QAAA,CAAAK,IAAA;MAAA;IAAA,GAAAT,OAAA;EAAA,CACnC;EAAA,OAAAN,yBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SACcY,SAASA,CAAAE,GAAA;EAAA,OAAAC,UAAA,CAAAhB,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAe,WAAA;EAAAA,UAAA,GAAAd,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAxB,SAAAa,SAAyBX,IAAI;IAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAW,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAT,IAAA,GAAAS,SAAA,CAAAR,IAAA;QAAA;UAAAQ,SAAA,CAAAR,IAAA;UAAA,OACdd,wBAAwB,CAACS,IAAI,CAAC;QAAA;UAAA,OAAAa,SAAA,CAAAP,MAAA,WAAAO,SAAA,CAAAC,IAAA;QAAA;QAAA;UAAA,OAAAD,SAAA,CAAAL,IAAA;MAAA;IAAA,GAAAG,QAAA;EAAA,CAC5C;EAAA,OAAAD,UAAA,CAAAhB,KAAA,OAAAC,SAAA;AAAA;AAAA,SAKcoB,4BAA4BA,CAAA;EAAA,OAAAC,6BAAA,CAAAtB,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAqB,8BAAA;EAAAA,6BAAA,GAAApB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA3C,SAAAmB,SAAA;IAAA,OAAApB,mBAAA,GAAAI,IAAA,UAAAiB,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAf,IAAA,GAAAe,SAAA,CAAAd,IAAA;QAAA;UAAA,OAAAc,SAAA,CAAAb,MAAA,WACShB,WAAW,CAAC8B,aAAa,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAD,SAAA,CAAAX,IAAA;MAAA;IAAA,GAAAS,QAAA;EAAA,CACnC;EAAA,OAAAD,6BAAA,CAAAtB,KAAA,OAAAC,SAAA;AAAA;AAAA,SACcyB,aAAaA,CAAA;EAAA,OAAAC,cAAA,CAAA3B,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAA0B,eAAA;EAAAA,cAAA,GAAAzB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA5B,SAAAwB,SAAA;IAAA,OAAAzB,mBAAA,GAAAI,IAAA,UAAAsB,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAApB,IAAA,GAAAoB,SAAA,CAAAnB,IAAA;QAAA;UAAAmB,SAAA,CAAAnB,IAAA;UAAA,OACeU,4BAA4B,CAAC,CAAC;QAAA;UAAA,OAAAS,SAAA,CAAAlB,MAAA,WAAAkB,SAAA,CAAAV,IAAA;QAAA;QAAA;UAAA,OAAAU,SAAA,CAAAhB,IAAA;MAAA;IAAA,GAAAc,QAAA;EAAA,CAC5C;EAAA,OAAAD,cAAA,CAAA3B,KAAA,OAAAC,SAAA;AAAA;AAKD,eAAe;EACbY,SAAS,EAATA,SAAS;EACTa,aAAa,EAAbA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}