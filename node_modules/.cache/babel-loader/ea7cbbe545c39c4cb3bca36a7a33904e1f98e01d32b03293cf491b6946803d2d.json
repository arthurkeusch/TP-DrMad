{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'CheckedList',\n  props: {\n    data: Array,\n    fields: Array,\n    itemCheck: Boolean,\n    checked: Array,\n    itemButton: Object,\n    listButton: Object,\n    itemAmount: Boolean\n  },\n  data() {\n    return {\n      amountInput: this.data ? Array(this.data.length).fill(1) : [] // Modifié la valeur par défaut à 1\n    };\n  },\n  methods: {\n    toggleCheckbox(index) {\n      this.$emit('checked-changed', index);\n    },\n    isChecked(index) {\n      return this.checked.includes(index);\n    },\n    itemButtonClick(index) {\n      this.$emit('item-button-clicked', {\n        index,\n        amount: this.itemAmount ? this.amountInput[index] : 1 // Modifié la valeur par défaut à 1\n      });\n    },\n    listButtonClick() {\n      const selectedItems = this.checked.reduce((acc, isSelected, index) => {\n        if (isSelected) {\n          acc.push({\n            index,\n            amount: this.itemAmount ? this.amountInput[index] : 1 // Modifié la valeur par défaut à 1\n          });\n          // Désélectionner l'item\n          this.$set(this.checked, index, false);\n        }\n        return acc;\n      }, []);\n      this.$emit('list-button-clicked', selectedItems);\n    },\n    displayItem(item) {\n      return this.fields.map(field => item[field]).join(' ');\n    },\n    updateAmount(index) {\n      this.$emit('amount-updated', {\n        index,\n        amount: this.amountInput[index]\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","Array","fields","itemCheck","Boolean","checked","itemButton","Object","listButton","itemAmount","amountInput","length","fill","methods","toggleCheckbox","index","$emit","isChecked","includes","itemButtonClick","amount","listButtonClick","selectedItems","reduce","acc","isSelected","push","$set","displayItem","item","map","field","join","updateAmount"],"sources":["src/components/CheckedList.vue"],"sourcesContent":["<!-- CheckedList.vue -->\n<template>\n  <div>\n    <div v-for=\"(item, index) in data\" :key=\"index\">\n      <input\n          v-if=\"itemCheck\"\n          type=\"checkbox\"\n          :checked=\"isChecked(index)\"\n          @change=\"toggleCheckbox(index)\"\n      />\n      {{ displayItem(item) }}\n      <input\n          v-if=\"itemAmount\"\n          type=\"number\"\n          v-model=\"amountInput[index]\"\n          min=\"1\"\n          @input=\"updateAmount(index)\"\n      />\n      <button v-if=\"itemButton.show\" @click=\"itemButtonClick(index)\">\n        {{ itemButton.text }}\n      </button>\n    </div>\n    <button v-if=\"listButton.show\" @click=\"listButtonClick\">\n      {{ listButton.text }}\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CheckedList',\n  props: {\n    data: Array,\n    fields: Array,\n    itemCheck: Boolean,\n    checked: Array,\n    itemButton: Object,\n    listButton: Object,\n    itemAmount: Boolean,\n  },\n  data() {\n    return {\n      amountInput: this.data ? Array(this.data.length).fill(1) : [], // Modifié la valeur par défaut à 1\n    };\n  },\n  methods: {\n    toggleCheckbox(index) {\n      this.$emit('checked-changed', index);\n    },\n\n    isChecked(index) {\n      return this.checked.includes(index);\n    },\n\n    itemButtonClick(index) {\n      this.$emit('item-button-clicked', {\n        index,\n        amount: this.itemAmount ? this.amountInput[index] : 1, // Modifié la valeur par défaut à 1\n      });\n    },\n\n    listButtonClick() {\n      const selectedItems = this.checked.reduce((acc, isSelected, index) => {\n        if (isSelected) {\n          acc.push({\n            index,\n            amount: this.itemAmount ? this.amountInput[index] : 1, // Modifié la valeur par défaut à 1\n          });\n          // Désélectionner l'item\n          this.$set(this.checked, index, false);\n        }\n        return acc;\n      }, []);\n      this.$emit('list-button-clicked', selectedItems);\n    },\n\n    displayItem(item) {\n      return this.fields.map((field) => item[field]).join(' ');\n    },\n\n    updateAmount(index) {\n      this.$emit('amount-updated', {\n        index,\n        amount: this.amountInput[index],\n      });\n    },\n  },\n};\n</script>"],"mappings":";AA6BA;EACAA,IAAA;EACAC,KAAA;IACAC,IAAA,EAAAC,KAAA;IACAC,MAAA,EAAAD,KAAA;IACAE,SAAA,EAAAC,OAAA;IACAC,OAAA,EAAAJ,KAAA;IACAK,UAAA,EAAAC,MAAA;IACAC,UAAA,EAAAD,MAAA;IACAE,UAAA,EAAAL;EACA;EACAJ,KAAA;IACA;MACAU,WAAA,OAAAV,IAAA,GAAAC,KAAA,MAAAD,IAAA,CAAAW,MAAA,EAAAC,IAAA;IACA;EACA;EACAC,OAAA;IACAC,eAAAC,KAAA;MACA,KAAAC,KAAA,oBAAAD,KAAA;IACA;IAEAE,UAAAF,KAAA;MACA,YAAAV,OAAA,CAAAa,QAAA,CAAAH,KAAA;IACA;IAEAI,gBAAAJ,KAAA;MACA,KAAAC,KAAA;QACAD,KAAA;QACAK,MAAA,OAAAX,UAAA,QAAAC,WAAA,CAAAK,KAAA;MACA;IACA;IAEAM,gBAAA;MACA,MAAAC,aAAA,QAAAjB,OAAA,CAAAkB,MAAA,EAAAC,GAAA,EAAAC,UAAA,EAAAV,KAAA;QACA,IAAAU,UAAA;UACAD,GAAA,CAAAE,IAAA;YACAX,KAAA;YACAK,MAAA,OAAAX,UAAA,QAAAC,WAAA,CAAAK,KAAA;UACA;UACA;UACA,KAAAY,IAAA,MAAAtB,OAAA,EAAAU,KAAA;QACA;QACA,OAAAS,GAAA;MACA;MACA,KAAAR,KAAA,wBAAAM,aAAA;IACA;IAEAM,YAAAC,IAAA;MACA,YAAA3B,MAAA,CAAA4B,GAAA,CAAAC,KAAA,IAAAF,IAAA,CAAAE,KAAA,GAAAC,IAAA;IACA;IAEAC,aAAAlB,KAAA;MACA,KAAAC,KAAA;QACAD,KAAA;QACAK,MAAA,OAAAV,WAAA,CAAAK,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}