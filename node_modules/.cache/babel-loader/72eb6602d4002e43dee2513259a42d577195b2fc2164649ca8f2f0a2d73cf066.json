{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ShopService from '../services/shop.service';\nimport router from \"@/router\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { orders } from \"@/datasource/data\";\nexport default {\n  state: {\n    basket: [],\n    shopUser: null,\n    viruses: [],\n    orders: []\n  },\n  mutations: {\n    updateShopUser(state, user) {\n      state.shopUser = user;\n    }\n  },\n  actions: {\n    async shopLogin({\n      commit\n    }, data) {\n      let response = await ShopService.shopLogin(data);\n      if (response.error === 0) {\n        commit('updateShopUser', response.data);\n        this.state.shopUser = response.data;\n        await router.push('/shop');\n      } else {\n        console.log(response.data);\n      }\n    },\n    async shopLogout() {\n      this.state.shopUser = null;\n      await router.push('/');\n    },\n    async getAllViruses() {\n      let response = await ShopService.getAllViruses();\n      if (response.error === 0) {\n        this.state.viruses = response.data;\n      } else {\n        console.log(response.data);\n      }\n    },\n    addToCartAction({\n      state\n    }, {\n      virus,\n      quantity\n    }) {\n      const existingItemIndex = state.basket.findIndex(item => item.virus._id === virus._id);\n      if (existingItemIndex !== -1) {\n        state.basket[existingItemIndex].quantity += quantity;\n      } else {\n        state.basket.push({\n          virus,\n          quantity\n        });\n      }\n    },\n    removeFromCartAction({\n      state\n    }, index) {\n      state.basket.splice(index, 1);\n    },\n    clearCartAction() {\n      this.state.basket = [];\n    },\n    checkoutAction({\n      state\n    }, cartItems) {\n      const newOrder = {\n        items: cartItems.map(item => ({\n          item,\n          amount: item.quantity\n        })),\n        date: new Date(),\n        total: cartItems.reduce((total, item) => total + item.virus.price * item.quantity, 0),\n        status: 'waiting_payment',\n        uuid: uuidv4()\n      };\n      state.orders.push(newOrder);\n      const currentUser = state.shopUser;\n      if (currentUser) {\n        currentUser.orders.push(newOrder._id);\n      }\n    },\n    validationPaiement(idcmd) {\n      console.log(\"OK\");\n      for (const order of this.$store.state.orders) {\n        if (order.uuid === idcmd) order.status = \"finalized\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["ShopService","router","v4","uuidv4","orders","state","basket","shopUser","viruses","mutations","updateShopUser","user","actions","shopLogin","commit","data","response","error","push","console","log","shopLogout","getAllViruses","addToCartAction","virus","quantity","existingItemIndex","findIndex","item","_id","removeFromCartAction","index","splice","clearCartAction","checkoutAction","cartItems","newOrder","items","map","amount","date","Date","total","reduce","price","status","uuid","currentUser","validationPaiement","idcmd","order","$store"],"sources":["/home/arthur/Documents/BUT/BUT2/Dev web/S3/Front-end/S3/tp4_v2/src/store/shop.js"],"sourcesContent":["import ShopService from '../services/shop.service'\r\nimport router from \"@/router\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {orders} from \"@/datasource/data\";\r\n\r\nexport default {\r\n    state: {\r\n        basket: [],\r\n        shopUser: null,\r\n        viruses: [],\r\n        orders: []\r\n    },\r\n\r\n    mutations: {\r\n        updateShopUser(state, user) {\r\n            state.shopUser = user;\r\n        },\r\n    },\r\n\r\n    actions: {\r\n        async shopLogin({ commit }, data) {\r\n            let response = await ShopService.shopLogin(data)\r\n            if (response.error === 0) {\r\n                commit('updateShopUser', response.data);\r\n                this.state.shopUser = response.data;\r\n                await router.push('/shop');\r\n            } else {\r\n                console.log(response.data)\r\n            }\r\n        },\r\n\r\n        async shopLogout() {\r\n            this.state.shopUser = null;\r\n            await router.push('/');\r\n        },\r\n\r\n        async getAllViruses() {\r\n            let response = await ShopService.getAllViruses();\r\n            if (response.error === 0) {\r\n                this.state.viruses = response.data;\r\n            } else {\r\n                console.log(response.data);\r\n            }\r\n        },\r\n\r\n        addToCartAction({ state }, { virus, quantity }) {\r\n            const existingItemIndex = state.basket.findIndex(item => item.virus._id === virus._id);\r\n            if (existingItemIndex !== -1) {\r\n                state.basket[existingItemIndex].quantity += quantity;\r\n            } else {\r\n                state.basket.push({ virus, quantity });\r\n            }\r\n        },\r\n\r\n        removeFromCartAction({ state }, index) {\r\n            state.basket.splice(index, 1);\r\n        },\r\n\r\n        clearCartAction() {\r\n            this.state.basket = [];\r\n        },\r\n\r\n        checkoutAction({ state }, cartItems) {\r\n            const newOrder = {\r\n                items: cartItems.map(item => ({ item, amount: item.quantity })),\r\n                date: new Date(),\r\n                total: cartItems.reduce((total, item) => total + item.virus.price * item.quantity, 0),\r\n                status: 'waiting_payment',\r\n                uuid: uuidv4(),\r\n            };\r\n            state.orders.push(newOrder);\r\n            const currentUser = state.shopUser;\r\n            if (currentUser) {\r\n                currentUser.orders.push(newOrder._id);\r\n            }\r\n        },\r\n\r\n        validationPaiement(idcmd) {\r\n            console.log(\"OK\");\r\n            for (const order of this.$store.state.orders) {\r\n                if (order.uuid === idcmd) order.status = \"finalized\";\r\n            }\r\n        },\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}