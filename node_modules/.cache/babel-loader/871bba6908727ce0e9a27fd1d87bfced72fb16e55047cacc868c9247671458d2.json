{"ast":null,"code":"export default {\n  name: 'CheckedList',\n  props: {\n    data: Array,\n    fields: Array,\n    checked: Array,\n    itemButton: Object,\n    listButton: Object,\n    itemAmount: Boolean\n  },\n  data() {\n    console.log(this.data.length);\n    return {\n      checkedViruses: [],\n      amountInput: [1, 1, 1, 1, 1, 1]\n    };\n  },\n  methods: {\n    toggleCheckbox(index) {\n      this.$emit('checked-changed', index);\n    },\n    itemButtonClick(index) {\n      this.$emit('item-button-clicked', {\n        index,\n        amount: this.itemAmount ? this.amountInput[index] : undefined\n      });\n    },\n    addAllToCart() {\n      console.log('Checkedlist');\n      const items = this.checkedItemsWithAmount();\n      console.log(items);\n      this.$emit('add-all-to-cart', items);\n    },\n    displayItem(item) {\n      return this.fields.map(field => item[field]).join(' ');\n    },\n    updateAmount(index) {\n      this.$emit('amount-updated', {\n        index,\n        amount: this.amountInput[index]\n      });\n    },\n    checkedItemsWithAmount() {\n      const checkedItems = [];\n      /*this.checkedViruses.forEach((isChecked, index) => {\n        if (isChecked && this.itemAmount) {\n          checkedItems.push({\n            item: this.data[index],\n            amount: this.amountInput[index],\n          });\n        }\n      });*/\n      console.log(this.amountInput);\n      return checkedItems;\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","Array","fields","checked","itemButton","Object","listButton","itemAmount","Boolean","console","log","length","checkedViruses","amountInput","methods","toggleCheckbox","index","$emit","itemButtonClick","amount","undefined","addAllToCart","items","checkedItemsWithAmount","displayItem","item","map","field","join","updateAmount","checkedItems"],"sources":["src/components/CheckedList.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-for=\"(item, index) in data\" :key=\"index\">\n      <input\n          type=\"checkbox\"\n          :checked=\"checkedViruses[index]\"\n          @change=\"toggleCheckbox(index)\"\n      />\n      {{ displayItem(item) }}\n      <input\n          v-if=\"itemAmount\"\n          type=\"number\"\n          v-model=\"amountInput[index]\"\n          min=\"1\"\n          @input=\"updateAmount(index)\"\n      />\n      <button v-if=\"itemButton.show\" @click=\"itemButtonClick(index)\">\n        {{ itemButton.text }}\n      </button>\n    </div>\n    <button v-if=\"listButton.show\" @click=\"addAllToCart\">\n      {{ listButton.text }}\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CheckedList',\n  props: {\n    data: Array,\n    fields: Array,\n    checked: Array,\n    itemButton: Object,\n    listButton: Object,\n    itemAmount: Boolean,\n  },\n  data() {\n    console.log(this.data.length);\n    return {\n      checkedViruses: [],\n      amountInput: [1,1,1,1,1,1],\n    };\n  },\n  methods: {\n    toggleCheckbox(index) {\n      this.$emit('checked-changed', index);\n    },\n\n    itemButtonClick(index) {\n      this.$emit('item-button-clicked', {\n        index,\n        amount: this.itemAmount ? this.amountInput[index] : undefined,\n      });\n    },\n\n    addAllToCart() {\n      console.log('Checkedlist');\n      const items = this.checkedItemsWithAmount();\n      console.log(items);\n      this.$emit('add-all-to-cart', items);\n    },\n\n    displayItem(item) {\n      return this.fields.map((field) => item[field]).join(' ');\n    },\n\n    updateAmount(index) {\n      this.$emit('amount-updated', {\n        index,\n        amount: this.amountInput[index],\n      });\n    },\n\n    checkedItemsWithAmount() {\n      const checkedItems = [];\n      /*this.checkedViruses.forEach((isChecked, index) => {\n        if (isChecked && this.itemAmount) {\n          checkedItems.push({\n            item: this.data[index],\n            amount: this.amountInput[index],\n          });\n        }\n      });*/\n      console.log(this.amountInput);\n      return checkedItems;\n    },\n  },\n};\n</script>\n"],"mappings":"AA2BA;EACAA,IAAA;EACAC,KAAA;IACAC,IAAA,EAAAC,KAAA;IACAC,MAAA,EAAAD,KAAA;IACAE,OAAA,EAAAF,KAAA;IACAG,UAAA,EAAAC,MAAA;IACAC,UAAA,EAAAD,MAAA;IACAE,UAAA,EAAAC;EACA;EACAR,KAAA;IACAS,OAAA,CAAAC,GAAA,MAAAV,IAAA,CAAAW,MAAA;IACA;MACAC,cAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACAC,eAAAC,KAAA;MACA,KAAAC,KAAA,oBAAAD,KAAA;IACA;IAEAE,gBAAAF,KAAA;MACA,KAAAC,KAAA;QACAD,KAAA;QACAG,MAAA,OAAAZ,UAAA,QAAAM,WAAA,CAAAG,KAAA,IAAAI;MACA;IACA;IAEAC,aAAA;MACAZ,OAAA,CAAAC,GAAA;MACA,MAAAY,KAAA,QAAAC,sBAAA;MACAd,OAAA,CAAAC,GAAA,CAAAY,KAAA;MACA,KAAAL,KAAA,oBAAAK,KAAA;IACA;IAEAE,YAAAC,IAAA;MACA,YAAAvB,MAAA,CAAAwB,GAAA,CAAAC,KAAA,IAAAF,IAAA,CAAAE,KAAA,GAAAC,IAAA;IACA;IAEAC,aAAAb,KAAA;MACA,KAAAC,KAAA;QACAD,KAAA;QACAG,MAAA,OAAAN,WAAA,CAAAG,KAAA;MACA;IACA;IAEAO,uBAAA;MACA,MAAAO,YAAA;MACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACArB,OAAA,CAAAC,GAAA,MAAAG,WAAA;MACA,OAAAiB,YAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}