{"ast":null,"code":"export default {\n  name: 'CheckedList',\n  props: {\n    data: Array,\n    fields: Array,\n    checked: Array,\n    itemButton: Object,\n    listButton: Object,\n    itemAmount: Boolean\n  },\n  data() {\n    return {\n      amountInput: this.data ? Array(this.data.length).fill(1) : []\n    };\n  },\n  methods: {\n    isChecked(index) {\n      // Utilisez une méthode pour déterminer si la checkbox doit être cochée\n      return this.checked.includes(index);\n    },\n    toggleCheckbox(index) {\n      // Émettre un événement lorsque la checkbox est cochée ou décochée\n      this.$emit('checked-changed', index);\n    },\n    itemButtonClick(index) {\n      this.$emit('item-button-clicked', {\n        index,\n        amount: this.itemAmount ? this.amountInput[index] : undefined\n      });\n    },\n    addAllToCart() {\n      // Émettre un événement pour demander au composant parent d'exécuter addAllToCart\n      this.$emit('add-all-to-cart');\n    },\n    displayItem(item) {\n      // Utilisez les noms de propriétés spécifiés dans le tableau fields\n      return this.fields.map(field => item[field]).join(' ');\n    },\n    updateAmount(index) {\n      this.$emit('amount-updated', {\n        index,\n        amount: this.amountInput[index]\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","Array","fields","checked","itemButton","Object","listButton","itemAmount","Boolean","amountInput","length","fill","methods","isChecked","index","includes","toggleCheckbox","$emit","itemButtonClick","amount","undefined","addAllToCart","displayItem","item","map","field","join","updateAmount"],"sources":["src/components/CheckedList.vue"],"sourcesContent":["<!-- CheckedList.vue -->\n<template>\n  <div>\n    <div v-for=\"(item, index) in data\" :key=\"index\">\n      <input type=\"checkbox\" :checked=\"isChecked(index)\" @change=\"toggleCheckbox(index)\" />\n      {{ displayItem(item) }}\n      <input\n          v-if=\"itemAmount\"\n          type=\"number\"\n          v-model=\"amountInput[index]\"\n          min=\"1\"\n          @input=\"updateAmount(index)\"\n      />\n      <button v-if=\"itemButton.show\" @click=\"itemButtonClick(index)\">\n        {{ itemButton.text }}\n      </button>\n    </div>\n    <button v-if=\"listButton.show\" @click=\"addAllToCart\">\n      {{ listButton.text }}\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CheckedList',\n  props: {\n    data: Array,\n    fields: Array,\n    checked: Array,\n    itemButton: Object,\n    listButton: Object,\n    itemAmount: Boolean,\n  },\n  data() {\n    return {\n      amountInput: this.data ? Array(this.data.length).fill(1) : [],\n    };\n  },\n  methods: {\n    isChecked(index) {\n      // Utilisez une méthode pour déterminer si la checkbox doit être cochée\n      return this.checked.includes(index);\n    },\n    toggleCheckbox(index) {\n      // Émettre un événement lorsque la checkbox est cochée ou décochée\n      this.$emit('checked-changed', index);\n    },\n    \n    itemButtonClick(index) {\n      this.$emit('item-button-clicked', {\n        index,\n        amount: this.itemAmount ? this.amountInput[index] : undefined,\n      });\n    },\n\n    addAllToCart() {\n      // Émettre un événement pour demander au composant parent d'exécuter addAllToCart\n      this.$emit('add-all-to-cart');\n    },\n\n    displayItem(item) {\n      // Utilisez les noms de propriétés spécifiés dans le tableau fields\n      return this.fields.map((field) => item[field]).join(' ');\n    },\n\n    updateAmount(index) {\n      this.$emit('amount-updated', {\n        index,\n        amount: this.amountInput[index],\n      });\n    },\n  },\n};\n</script>\n"],"mappings":"AAwBA;EACAA,IAAA;EACAC,KAAA;IACAC,IAAA,EAAAC,KAAA;IACAC,MAAA,EAAAD,KAAA;IACAE,OAAA,EAAAF,KAAA;IACAG,UAAA,EAAAC,MAAA;IACAC,UAAA,EAAAD,MAAA;IACAE,UAAA,EAAAC;EACA;EACAR,KAAA;IACA;MACAS,WAAA,OAAAT,IAAA,GAAAC,KAAA,MAAAD,IAAA,CAAAU,MAAA,EAAAC,IAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAAC,KAAA;MACA;MACA,YAAAX,OAAA,CAAAY,QAAA,CAAAD,KAAA;IACA;IACAE,eAAAF,KAAA;MACA;MACA,KAAAG,KAAA,oBAAAH,KAAA;IACA;IAEAI,gBAAAJ,KAAA;MACA,KAAAG,KAAA;QACAH,KAAA;QACAK,MAAA,OAAAZ,UAAA,QAAAE,WAAA,CAAAK,KAAA,IAAAM;MACA;IACA;IAEAC,aAAA;MACA;MACA,KAAAJ,KAAA;IACA;IAEAK,YAAAC,IAAA;MACA;MACA,YAAArB,MAAA,CAAAsB,GAAA,CAAAC,KAAA,IAAAF,IAAA,CAAAE,KAAA,GAAAC,IAAA;IACA;IAEAC,aAAAb,KAAA;MACA,KAAAG,KAAA;QACAH,KAAA;QACAK,MAAA,OAAAV,WAAA,CAAAK,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}