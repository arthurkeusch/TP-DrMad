{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport validate from './validate.js';\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\nexport default parse;","map":{"version":3,"names":["validate","parse","uuid","TypeError","v","arr","Uint8Array","parseInt","slice"],"sources":["/home/arthur/Documents/GitHub/TP-DrMad/node_modules/uuid/dist/esm-browser/parse.js"],"sourcesContent":["import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,QAAQ,MAAM,eAAe;AAEpC,SAASC,KAAKA,CAACC,IAAI,EAAE;EACnB,IAAI,CAACF,QAAQ,CAACE,IAAI,CAAC,EAAE;IACnB,MAAMC,SAAS,CAAC,cAAc,CAAC;EACjC;EAEA,IAAIC,CAAC;EACL,IAAMC,GAAG,GAAG,IAAIC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEhCD,GAAG,CAAC,CAAC,CAAC,GAAG,CAACD,CAAC,GAAGG,QAAQ,CAACL,IAAI,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,EAAE;EACpDH,GAAG,CAAC,CAAC,CAAC,GAAGD,CAAC,KAAK,EAAE,GAAG,IAAI;EACxBC,GAAG,CAAC,CAAC,CAAC,GAAGD,CAAC,KAAK,CAAC,GAAG,IAAI;EACvBC,GAAG,CAAC,CAAC,CAAC,GAAGD,CAAC,GAAG,IAAI,CAAC,CAAC;;EAEnBC,GAAG,CAAC,CAAC,CAAC,GAAG,CAACD,CAAC,GAAGG,QAAQ,CAACL,IAAI,CAACM,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC;EACpDH,GAAG,CAAC,CAAC,CAAC,GAAGD,CAAC,GAAG,IAAI,CAAC,CAAC;;EAEnBC,GAAG,CAAC,CAAC,CAAC,GAAG,CAACD,CAAC,GAAGG,QAAQ,CAACL,IAAI,CAACM,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC;EACrDH,GAAG,CAAC,CAAC,CAAC,GAAGD,CAAC,GAAG,IAAI,CAAC,CAAC;;EAEnBC,GAAG,CAAC,CAAC,CAAC,GAAG,CAACD,CAAC,GAAGG,QAAQ,CAACL,IAAI,CAACM,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC;EACrDH,GAAG,CAAC,CAAC,CAAC,GAAGD,CAAC,GAAG,IAAI,CAAC,CAAC;EACnB;;EAEAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAACD,CAAC,GAAGG,QAAQ,CAACL,IAAI,CAACM,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,aAAa,GAAG,IAAI;EACvEH,GAAG,CAAC,EAAE,CAAC,GAAGD,CAAC,GAAG,WAAW,GAAG,IAAI;EAChCC,GAAG,CAAC,EAAE,CAAC,GAAGD,CAAC,KAAK,EAAE,GAAG,IAAI;EACzBC,GAAG,CAAC,EAAE,CAAC,GAAGD,CAAC,KAAK,EAAE,GAAG,IAAI;EACzBC,GAAG,CAAC,EAAE,CAAC,GAAGD,CAAC,KAAK,CAAC,GAAG,IAAI;EACxBC,GAAG,CAAC,EAAE,CAAC,GAAGD,CAAC,GAAG,IAAI;EAClB,OAAOC,GAAG;AACZ;AAEA,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}