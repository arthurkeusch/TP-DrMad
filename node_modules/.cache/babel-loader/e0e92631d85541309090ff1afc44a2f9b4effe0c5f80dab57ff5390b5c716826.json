{"ast":null,"code":"import { ref } from 'vue';\nexport default {\n  __name: 'BankOperation',\n  setup(__props) {\n    const operationTitle = 'Débit / Virement';\n    const amount = ref('');\n    const hasRecipient = ref(false);\n    const recipient = ref('');\n    const operationResult = ref('');\n    const validateOperation = () => {\n      if (hasRecipient) {} else {}\n\n      // Exemple de résultat après validation\n      operationResult.value = `L'opération est validée avec le n° : ${generateUuid()}. Vous pouvez la retrouver dans l'historique.`;\n\n      // Réinitialiser les champs\n      amount.value = '';\n      hasRecipient.value = false;\n      recipient.value = '';\n    };\n    const generateUuid = () => {\n      // Logique de génération d'UUID\n      // Cela dépend de votre application, vous pouvez utiliser une bibliothèque comme uuid ou simplement Math.random()\n\n      // Exemple simple avec Math.random() pour illustrer\n      return `${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}`;\n    };\n    return {\n      __sfc: true,\n      operationTitle,\n      amount,\n      hasRecipient,\n      recipient,\n      operationResult,\n      validateOperation,\n      generateUuid\n    };\n  }\n};","map":{"version":3,"names":["ref","operationTitle","amount","hasRecipient","recipient","operationResult","validateOperation","value","generateUuid","Math","random","toString","substr"],"sources":["BankOperation.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>{{ operationTitle }}</h1>\n    <label for=\"amount\">Montant:</label>\n    <input v-model=\"amount\" type=\"number\" id=\"amount\" />\n\n    <div>\n      <input type=\"checkbox\" id=\"recipientCheckbox\" v-model=\"hasRecipient\" />\n      <label for=\"recipientCheckbox\">Destinataire</label>\n\n      <input v-if=\"hasRecipient\" v-model=\"recipient\" type=\"text\" id=\"recipient\" placeholder=\"Destinataire\" />\n    </div>\n\n    <button @click=\"validateOperation\">Valider</button>\n\n    <div v-if=\"operationResult\">\n      {{ operationResult }}\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst operationTitle = 'Débit / Virement';\nconst amount = ref('');\nconst hasRecipient = ref(false);\nconst recipient = ref('');\nconst operationResult = ref('');\n\nconst validateOperation = () => {\n  if (hasRecipient) {\n\n  } else {\n\n  }\n\n  // Exemple de résultat après validation\n  operationResult.value = `L'opération est validée avec le n° : ${generateUuid()}. Vous pouvez la retrouver dans l'historique.`;\n\n  // Réinitialiser les champs\n  amount.value = '';\n  hasRecipient.value = false;\n  recipient.value = '';\n};\n\nconst generateUuid = () => {\n  // Logique de génération d'UUID\n  // Cela dépend de votre application, vous pouvez utiliser une bibliothèque comme uuid ou simplement Math.random()\n\n  // Exemple simple avec Math.random() pour illustrer\n  return `${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}`;\n};\n</script>\n\n<style scoped>\n/* Ajouter des styles au besoin */\n</style>"],"mappings":"AAsBA,SAASA,GAAG,QAAQ,KAAK;;;;IAEzB,MAAMC,cAAc,GAAG,kBAAkB;IACzC,MAAMC,MAAM,GAAGF,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMG,YAAY,GAAGH,GAAG,CAAC,KAAK,CAAC;IAC/B,MAAMI,SAAS,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMK,eAAe,GAAGL,GAAG,CAAC,EAAE,CAAC;IAE/B,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;MAC9B,IAAIH,YAAY,EAAE,CAElB,CAAC,MAAM,CAEP;;MAEA;MACAE,eAAe,CAACE,KAAK,GAAI,wCAAuCC,YAAY,CAAC,CAAE,+CAA8C;;MAE7H;MACAN,MAAM,CAACK,KAAK,GAAG,EAAE;MACjBJ,YAAY,CAACI,KAAK,GAAG,KAAK;MAC1BH,SAAS,CAACG,KAAK,GAAG,EAAE;IACtB,CAAC;IAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB;MACA;;MAEA;MACA,OAAQ,GAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAE,IAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAE,IAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAE,EAAC;IAC3I,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}