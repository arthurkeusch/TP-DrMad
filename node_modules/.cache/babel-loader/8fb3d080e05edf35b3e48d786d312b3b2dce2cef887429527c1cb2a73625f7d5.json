{"ast":null,"code":"import { mapActions } from 'vuex';\nexport default {\n  name: 'BankAccountView',\n  data: () => ({\n    number: ''\n  }),\n  computed: {\n    /*...mapState(['accountAmount', 'accountTransactions','accountNumberError']),\n    isAccountNumberValid() {\n      const rexp = RegExp('^[A-Za-z0-9]{22}-[0-9]{7}$','g')\n      return rexp.test(this.number)\n    }*/\n  },\n  methods: {\n    ...mapActions(['getAccount' /*,'getAccountTransactions'*/]),\n    /*...mapMutations(['updateAccountNumberError']),*/\n    /*convertDate(date) {\n      let d = new Date(date)\n      return d.getMonth()+\"/\"+d.getDate()+\"/\"+d.getFullYear()+\" the \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds()\n    },*/\n    resetAccountNumber() {\n      this.number = '';\n      this.updateAccountNumberError(0);\n    },\n    getAccount1(number) {\n      console.log(\"OK\");\n      this.getAccount(number);\n    }\n  }\n};","map":{"version":3,"names":["mapActions","name","data","number","computed","methods","resetAccountNumber","updateAccountNumberError","getAccount1","console","log","getAccount"],"sources":["src/views/BankAccountView.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Account data</h1>\n\n    <span>account number</span><input v-model=\"number\"><button @click=\"resetAccountNumber\">Reset</button>\n    <br />\n    <button @click=\"getAccount1(number)\">Valider</button>\n<!--    <button :disabled=\"!isAccountNumberValid\" @click=\"getAccountTransactions(number)\">Get transactions</button>\n    <p v-if=\"accountNumberError===-1\">invalid account number</p>-->\n<!--    <hr />-->\n<!--    <span>available amount : </span>-->\n<!--    <span v-if=\"accountNumberError === 1\" >{{accountAmount}}</span>-->\n<!--    <span v-else></span>-->\n<!--    <hr />-->\n<!--    <p>passed transactions:</p>-->\n<!--    <div v-if=\"accountNumberError === 1\">-->\n<!--      <ul>-->\n<!--        <li v-for=\"(trans,index) in accountTransactions\" :key=\"index\">{{trans.amount}} the {{convertDate(trans.date.$date)}}</li>-->\n<!--      </ul>-->\n<!--    </div>-->\n<!--    <span v-else></span>-->\n\n  </div>\n\n</template>\n\n<script>\n\nimport {mapActions} from 'vuex'\nexport default {\n  name: 'BankAccountView',\n  data: () => ({\n    number: '',\n  }),\n  computed: {\n    /*...mapState(['accountAmount', 'accountTransactions','accountNumberError']),\n    isAccountNumberValid() {\n      const rexp = RegExp('^[A-Za-z0-9]{22}-[0-9]{7}$','g')\n      return rexp.test(this.number)\n    }*/\n  },\n  methods: {\n    ...mapActions(['getAccount'/*,'getAccountTransactions'*/]),\n    /*...mapMutations(['updateAccountNumberError']),*/\n    /*convertDate(date) {\n      let d = new Date(date)\n      return d.getMonth()+\"/\"+d.getDate()+\"/\"+d.getFullYear()+\" the \"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds()\n    },*/\n    resetAccountNumber() {\n      this.number = ''\n      this.updateAccountNumberError(0)\n    },\n    getAccount1(number) {\n      console.log(\"OK\")\n      this.getAccount(number)\n    }\n  }\n}\n</script>\n"],"mappings":"AA4BA,SAAAA,UAAA;AACA;EACAC,IAAA;EACAC,IAAA,EAAAA,CAAA;IACAC,MAAA;EACA;EACAC,QAAA;IACA;AACA;AACA;AACA;AACA;EAJA,CAKA;EACAC,OAAA;IACA,GAAAL,UAAA;IACA;IACA;AACA;AACA;AACA;IACAM,mBAAA;MACA,KAAAH,MAAA;MACA,KAAAI,wBAAA;IACA;IACAC,YAAAL,MAAA;MACAM,OAAA,CAAAC,GAAA;MACA,KAAAC,UAAA,CAAAR,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}