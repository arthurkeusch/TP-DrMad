{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nimport ShopService from '../services/shop.service';\nimport BankAccountService from '../services/bankaccount.service';\nexport default new Vuex.Store({\n  // state = les données centralisées\n  state: () => ({\n    viruses: [],\n    shopUser: null,\n    accountAmount: 0,\n    accountTransactions: [],\n    accountNumberError: 0\n  }),\n  // mutations = fonctions synchrones pour mettre à jour le state (!!! interdit de modifier directement le state)\n  mutations: {\n    updateViruses(state, viruses) {\n      state.viruses = viruses;\n    },\n    updateShopUser(state, user) {\n      state.shopUser = user;\n    },\n    updateAccountAmount(state, amount) {\n      state.accountAmount = amount;\n    },\n    updateAccountTransactions(state, transactions) {\n      state.accountTransactions = transactions;\n    },\n    updateAccountNumberError(state, error) {\n      state.accountNumberError = error;\n    }\n  },\n  // actions = fonctions asynchrone pour mettre à jour le state, en faisant appel aux mutations, via la fonction commit()\n  actions: {\n    async shopLogin({\n      commit\n    }, data) {\n      console.log('login');\n      let response = await ShopService.shopLogin(data);\n      if (response.error === 0) {\n        commit('updateShopUser', response.data);\n      } else {\n        console.log(response.data);\n      }\n    },\n    async getAllViruses({\n      commit\n    }) {\n      console.log('récupération des viruses');\n      let response = await ShopService.getAllViruses();\n      if (response.error === 0) {\n        commit('updateViruses', response.data);\n      } else {\n        console.log(response.data);\n      }\n    },\n    async getAccountAmount({\n      commit\n    }, number) {\n      console.log('get account amount');\n      let response = await BankAccountService.getAccountAmount(number);\n      if (response.error === 0) {\n        commit('updateAccountAmount', response.data);\n        commit('updateAccountNumberError', 1);\n      } else {\n        console.log(response.data);\n        commit('updateAccountNumberError', -1);\n      }\n    },\n    async getAccountTransactions({\n      commit\n    }, number) {\n      console.log('get account transactions');\n      let response = await BankAccountService.getAccountTransactions(number);\n      if (response.error === 0) {\n        commit('updateAccountTransactions', response.data);\n        commit('updateAccountNumberError', 1);\n      } else {\n        console.log(response.data);\n        commit('updateAccountNumberError', -1);\n      }\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","use","ShopService","BankAccountService","Store","state","viruses","shopUser","accountAmount","accountTransactions","accountNumberError","mutations","updateViruses","updateShopUser","user","updateAccountAmount","amount","updateAccountTransactions","transactions","updateAccountNumberError","error","actions","shopLogin","commit","data","console","log","response","getAllViruses","getAccountAmount","number","getAccountTransactions"],"sources":["/home/arthur/Documents/BUT/BUT2/Dev web/S3/Front-end/S3/tp4_v2/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nimport ShopService from '../services/shop.service'\nimport BankAccountService from '../services/bankaccount.service'\n\nexport default new Vuex.Store({\n  // state = les données centralisées\n  state: () => ({\n    viruses: [],\n    shopUser: null,\n    accountAmount: 0,\n    accountTransactions: [],\n    accountNumberError: 0,\n  }),\n  // mutations = fonctions synchrones pour mettre à jour le state (!!! interdit de modifier directement le state)\n  mutations: {\n    updateViruses(state, viruses) {\n      state.viruses = viruses\n    },\n    updateShopUser(state, user) {\n      state.shopUser = user\n    },\n    updateAccountAmount(state, amount) {\n      state.accountAmount = amount\n    },\n    updateAccountTransactions(state, transactions) {\n      state.accountTransactions = transactions\n    },\n    updateAccountNumberError(state, error) {\n      state.accountNumberError = error\n    }\n  },\n  // actions = fonctions asynchrone pour mettre à jour le state, en faisant appel aux mutations, via la fonction commit()\n  actions: {\n    async shopLogin({commit}, data) {\n      console.log('login');\n      let response = await ShopService.shopLogin(data)\n      if (response.error === 0) {\n        commit('updateShopUser', response.data)\n      }\n      else {\n        console.log(response.data)\n      }\n    },\n    async getAllViruses({commit}) {\n      console.log('récupération des viruses');\n      let response = await ShopService.getAllViruses()\n      if (response.error === 0) {\n        commit('updateViruses', response.data)\n      }\n      else {\n        console.log(response.data)\n      }\n    },\n    async getAccountAmount({commit}, number) {\n      console.log('get account amount');\n      let response = await BankAccountService.getAccountAmount(number)\n      if (response.error === 0) {\n        commit('updateAccountAmount', response.data)\n        commit('updateAccountNumberError', 1)\n      }\n      else {\n        console.log(response.data)\n        commit('updateAccountNumberError', -1)\n      }\n    },\n    async getAccountTransactions({commit}, number) {\n      console.log('get account transactions');\n      let response = await BankAccountService.getAccountTransactions(number)\n      if (response.error === 0) {\n        commit('updateAccountTransactions', response.data)\n        commit('updateAccountNumberError', 1)\n      }\n      else {\n        console.log(response.data)\n        commit('updateAccountNumberError', -1)\n      }\n    },\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}