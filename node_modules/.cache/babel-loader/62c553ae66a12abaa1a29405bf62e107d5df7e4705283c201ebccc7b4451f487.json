{"ast":null,"code":"export default {\n  name: 'CheckedList',\n  props: {\n    data: Array,\n    fields: Array,\n    checked: Array,\n    itemButton: Object,\n    listButton: Object,\n    itemAmount: Boolean\n  },\n  data() {\n    return {\n      checkedViruses: {},\n      amountInput: {}\n    };\n  },\n  methods: {\n    toggleCheckbox(index) {\n      this.$set(this.checkedViruses, index, !this.checkedViruses[index]);\n    },\n    itemButtonClick(index) {\n      this.$emit('item-button-clicked', {\n        index,\n        amount: this.itemAmount ? this.amountInput[index] : undefined\n      });\n    },\n    addAllToCart() {\n      console.log(\"Checkedlist\");\n      const items = this.checkedItemsWithAmount();\n      console.log(items);\n      this.$emit('add-all-to-cart', items);\n    },\n    displayItem(item) {\n      return this.fields.map(field => item[field]).join(' ');\n    },\n    updateAmount(index) {\n      // Utilisez $set pour réactivement mettre à jour amountInput\n      this.$set(this.amountInput, index, this.amountInput[index] || 1);\n    },\n    checkedItemsWithAmount() {\n      return this.checkedViruses.map((isChecked, index) => ({\n        item: this.data[index],\n        amount: isChecked && this.itemAmount ? this.amountInput[index] : undefined\n      })).filter(({\n        amount\n      }) => amount !== undefined);\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","Array","fields","checked","itemButton","Object","listButton","itemAmount","Boolean","checkedViruses","amountInput","methods","toggleCheckbox","index","$set","itemButtonClick","$emit","amount","undefined","addAllToCart","console","log","items","checkedItemsWithAmount","displayItem","item","map","field","join","updateAmount","isChecked","filter"],"sources":["src/components/CheckedList.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-for=\"(item, index) in data\" :key=\"index\">\n      <input\n          type=\"checkbox\"\n          :checked=\"checkedViruses[index]\"\n          @change=\"toggleCheckbox(index)\"\n      />\n      {{ displayItem(item) }}\n      <input\n          v-if=\"itemAmount\"\n          type=\"number\"\n          v-model=\"amountInput[index]\"\n          min=\"1\"\n          @input=\"updateAmount(index)\"\n      />\n      <button v-if=\"itemButton.show\" @click=\"itemButtonClick(index)\">\n        {{ itemButton.text }}\n      </button>\n    </div>\n    <button v-if=\"listButton.show\" @click=\"addAllToCart\">\n      {{ listButton.text }}\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CheckedList',\n  props: {\n    data: Array,\n    fields: Array,\n    checked: Array,\n    itemButton: Object,\n    listButton: Object,\n    itemAmount: Boolean,\n  },\n  data() {\n    return {\n      checkedViruses: {},\n      amountInput: {},\n    };\n  },\n  methods: {\n    toggleCheckbox(index) {\n      this.$set(this.checkedViruses, index, !this.checkedViruses[index]);\n    },\n\n    itemButtonClick(index) {\n      this.$emit('item-button-clicked', {\n        index,\n        amount: this.itemAmount ? this.amountInput[index] : undefined,\n      });\n    },\n\n    addAllToCart() {\n      console.log(\"Checkedlist\");\n      const items = this.checkedItemsWithAmount();\n      console.log(items);\n      this.$emit('add-all-to-cart', items);\n    },\n\n    displayItem(item) {\n      return this.fields.map((field) => item[field]).join(' ');\n    },\n\n    updateAmount(index) {\n      // Utilisez $set pour réactivement mettre à jour amountInput\n      this.$set(this.amountInput, index, this.amountInput[index] || 1);\n    },\n\n    checkedItemsWithAmount() {\n      return this.checkedViruses.map((isChecked, index) => ({\n        item: this.data[index],\n        amount: isChecked && this.itemAmount ? this.amountInput[index] : undefined,\n      })).filter(({amount}) => amount !== undefined);\n    },\n  },\n};\n</script>"],"mappings":"AA2BA;EACAA,IAAA;EACAC,KAAA;IACAC,IAAA,EAAAC,KAAA;IACAC,MAAA,EAAAD,KAAA;IACAE,OAAA,EAAAF,KAAA;IACAG,UAAA,EAAAC,MAAA;IACAC,UAAA,EAAAD,MAAA;IACAE,UAAA,EAAAC;EACA;EACAR,KAAA;IACA;MACAS,cAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACAC,eAAAC,KAAA;MACA,KAAAC,IAAA,MAAAL,cAAA,EAAAI,KAAA,QAAAJ,cAAA,CAAAI,KAAA;IACA;IAEAE,gBAAAF,KAAA;MACA,KAAAG,KAAA;QACAH,KAAA;QACAI,MAAA,OAAAV,UAAA,QAAAG,WAAA,CAAAG,KAAA,IAAAK;MACA;IACA;IAEAC,aAAA;MACAC,OAAA,CAAAC,GAAA;MACA,MAAAC,KAAA,QAAAC,sBAAA;MACAH,OAAA,CAAAC,GAAA,CAAAC,KAAA;MACA,KAAAN,KAAA,oBAAAM,KAAA;IACA;IAEAE,YAAAC,IAAA;MACA,YAAAvB,MAAA,CAAAwB,GAAA,CAAAC,KAAA,IAAAF,IAAA,CAAAE,KAAA,GAAAC,IAAA;IACA;IAEAC,aAAAhB,KAAA;MACA;MACA,KAAAC,IAAA,MAAAJ,WAAA,EAAAG,KAAA,OAAAH,WAAA,CAAAG,KAAA;IACA;IAEAU,uBAAA;MACA,YAAAd,cAAA,CAAAiB,GAAA,EAAAI,SAAA,EAAAjB,KAAA;QACAY,IAAA,OAAAzB,IAAA,CAAAa,KAAA;QACAI,MAAA,EAAAa,SAAA,SAAAvB,UAAA,QAAAG,WAAA,CAAAG,KAAA,IAAAK;MACA,IAAAa,MAAA;QAAAd;MAAA,MAAAA,MAAA,KAAAC,SAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}