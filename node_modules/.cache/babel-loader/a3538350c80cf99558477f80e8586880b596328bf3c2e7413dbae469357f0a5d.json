{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ItemsList from '../../src/components/ItemsList.vue';\nimport BasketList from '../../src/components/BasketList.vue';\nimport { mapActions } from \"vuex\";\nexport default {\n  components: {\n    ItemsList,\n    BasketList\n  },\n  mounted() {\n    this.initPage();\n  },\n  data() {\n    return {\n      checkedViruses: [],\n      checkedCartItems: []\n    };\n  },\n  methods: {\n    ...mapActions([\"getAllViruses\", \"addToCartAction\", \"removeFromCartAction\", \"clearCartAction\", \"checkoutAction\"]),\n    async initPage() {\n      await this.getAllViruses();\n    },\n    toggleVirusCheckbox(index) {\n      const indexOfVirus = this.checkedViruses.indexOf(index);\n      if (indexOfVirus === -1) {\n        this.checkedViruses.push(index);\n      } else {\n        this.checkedViruses.splice(indexOfVirus, 1);\n      }\n    },\n    addToCart(index) {\n      const selectedVirus = this.viruses[index];\n      this.addToCartAction({\n        virus: selectedVirus,\n        quantity: 1\n      });\n    },\n    toggleCartItemCheckbox(index) {\n      this.checkedCartItems[index] = !this.checkedCartItems[index];\n    },\n    removeFromCart(index) {\n      const selectedCartItem = this.cartItems[index];\n      this.removeFromCartAction(selectedCartItem);\n    },\n    clearCart() {\n      this.cartItems = [];\n      this.clearCartAction();\n    },\n    checkout() {\n      this.checkoutAction(this.cartItems);\n    }\n  }\n};","map":{"version":3,"names":["ItemsList","BasketList","mapActions","components","mounted","initPage","data","checkedViruses","checkedCartItems","methods","getAllViruses","toggleVirusCheckbox","index","indexOfVirus","indexOf","push","splice","addToCart","selectedVirus","viruses","addToCartAction","virus","quantity","toggleCartItemCheckbox","removeFromCart","selectedCartItem","cartItems","removeFromCartAction","clearCart","clearCartAction","checkout","checkoutAction"],"sources":["src/views/ShopBuy.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"shop-container\">\r\n      <div class=\"items-list\">\r\n        <ItemsList\r\n            :items=\"viruses\"\r\n            :checked=\"checkedViruses\"\r\n            @checked-changed=\"toggleVirusCheckbox\"\r\n            @item-button-clicked=\"addToCart\"\r\n            @list-button-clicked=\"checkout\"\r\n        />\r\n      </div>\r\n      <div class=\"basket-list\">\r\n        <BasketList\r\n            :items=\"cartItems\"\r\n            :checked=\"checkedCartItems\"\r\n            @checked-changed=\"toggleCartItemCheckbox\"\r\n            @item-button-clicked=\"removeFromCart\"\r\n            @list-button-clicked=\"clearCart\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ItemsList from '../../src/components/ItemsList.vue';\r\nimport BasketList from '../../src/components/BasketList.vue';\r\nimport { mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  components: {\r\n    ItemsList,\r\n    BasketList,\r\n  },\r\n\r\n  mounted() {\r\n    this.initPage();\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      checkedViruses: [],\r\n      checkedCartItems: [],\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions([\"getAllViruses\", \"addToCartAction\", \"removeFromCartAction\", \"clearCartAction\", \"checkoutAction\"]),\r\n\r\n    async initPage() {\r\n      await this.getAllViruses();\r\n    },\r\n\r\n    toggleVirusCheckbox(index) {\r\n      const indexOfVirus = this.checkedViruses.indexOf(index);\r\n      if (indexOfVirus === -1) {\r\n        this.checkedViruses.push(index);\r\n      } else {\r\n        this.checkedViruses.splice(indexOfVirus, 1);\r\n      }\r\n    },\r\n\r\n    addToCart(index) {\r\n      const selectedVirus = this.viruses[index];\r\n      this.addToCartAction({ virus: selectedVirus, quantity: 1 });\r\n    },\r\n\r\n    toggleCartItemCheckbox(index) {\r\n      this.checkedCartItems[index] = !this.checkedCartItems[index];\r\n    },\r\n\r\n    removeFromCart(index) {\r\n      const selectedCartItem = this.cartItems[index];\r\n      this.removeFromCartAction(selectedCartItem);\r\n    },\r\n\r\n    clearCart() {\r\n      this.cartItems = [];\r\n      this.clearCartAction();\r\n    },\r\n\r\n    checkout() {\r\n      this.checkoutAction(this.cartItems);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.shop-container {\r\n  display: flex;\r\n}\r\n.items-list {\r\n  flex: 1;\r\n  margin-right: 20px;\r\n}\r\n.basket-list {\r\n  flex: 1;\r\n}\r\n</style>\r\n"],"mappings":";AA0BA,OAAAA,SAAA;AACA,OAAAC,UAAA;AACA,SAAAC,UAAA;AAEA;EACAC,UAAA;IACAH,SAAA;IACAC;EACA;EAEAG,QAAA;IACA,KAAAC,QAAA;EACA;EAEAC,KAAA;IACA;MACAC,cAAA;MACAC,gBAAA;IACA;EACA;EAEAC,OAAA;IACA,GAAAP,UAAA;IAEA,MAAAG,SAAA;MACA,WAAAK,aAAA;IACA;IAEAC,oBAAAC,KAAA;MACA,MAAAC,YAAA,QAAAN,cAAA,CAAAO,OAAA,CAAAF,KAAA;MACA,IAAAC,YAAA;QACA,KAAAN,cAAA,CAAAQ,IAAA,CAAAH,KAAA;MACA;QACA,KAAAL,cAAA,CAAAS,MAAA,CAAAH,YAAA;MACA;IACA;IAEAI,UAAAL,KAAA;MACA,MAAAM,aAAA,QAAAC,OAAA,CAAAP,KAAA;MACA,KAAAQ,eAAA;QAAAC,KAAA,EAAAH,aAAA;QAAAI,QAAA;MAAA;IACA;IAEAC,uBAAAX,KAAA;MACA,KAAAJ,gBAAA,CAAAI,KAAA,UAAAJ,gBAAA,CAAAI,KAAA;IACA;IAEAY,eAAAZ,KAAA;MACA,MAAAa,gBAAA,QAAAC,SAAA,CAAAd,KAAA;MACA,KAAAe,oBAAA,CAAAF,gBAAA;IACA;IAEAG,UAAA;MACA,KAAAF,SAAA;MACA,KAAAG,eAAA;IACA;IAEAC,SAAA;MACA,KAAAC,cAAA,MAAAL,SAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}