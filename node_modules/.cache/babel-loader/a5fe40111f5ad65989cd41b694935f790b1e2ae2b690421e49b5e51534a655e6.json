{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ItemsList from '../../src/components/ItemsList.vue';\nimport BasketList from '../../src/components/BasketList.vue';\nimport { mapActions } from \"vuex\";\nexport default {\n  components: {\n    ItemsList,\n    BasketList\n  },\n  mounted() {\n    this.initPage();\n  },\n  data() {\n    return {\n      viruses: [],\n      cartItems: [],\n      checkedViruses: [],\n      checkedCartItems: []\n    };\n  },\n  methods: {\n    ...mapActions([\"getAllViruses\", \"addToCartAction\", \"removeFromCartAction\", \"clearCartAction\", \"checkoutAction\"]),\n    async initPage() {\n      await this.getAllViruses();\n      this.viruses = this.$store.state.viruses;\n      console.log(this.viruses);\n    },\n    /*toggleVirusCheckbox(index) {\r\n      const indexOfVirus = this.checkedViruses.indexOf(index);\r\n      if (indexOfVirus === -1) {\r\n        this.checkedViruses.push(index);\r\n      } else {\r\n        this.checkedViruses.splice(indexOfVirus, 1);\r\n      }\r\n    },*/\n    toggleVirusCheckbox(index) {\n      //this.$set(this.checkedViruses, index, !this.checkedViruses[index]);\n      if (!this.checkedViruses.findIndex(index)) {\n        this.checkedViruses.add(index);\n      } else {\n        this.checkedViruses.splice(index);\n      }\n    },\n    addToCart(index) {\n      const selectedVirus = this.viruses[index];\n      const quantity = 1; // Vous pouvez ajuster cela en fonction de la quantité que vous souhaitez ajouter au panier\n      console.log(\"Selected Virus:\", selectedVirus);\n      // Appel de l'action du store pour ajouter au panier\n      this.addToCartAction({\n        virus: selectedVirus,\n        quantity\n      });\n      // Ajout également au panier local de la page\n      console.log(\"Before Cart Items:\", this.cartItems);\n      this.cartItems.push({\n        virus: selectedVirus,\n        quantity\n      });\n      console.log(\"After Cart Items:\", this.cartItems);\n    },\n    toggleCartItemCheckbox(index) {\n      // Logique pour gérer la sélection/désélection des articles dans le panier\n      this.checkedCartItems[index] = !this.checkedCartItems[index];\n    },\n    removeFromCart(index) {\n      // Logique pour retirer un article du panier\n      const selectedCartItem = this.cartItems[index];\n      // Appel de l'action du store pour retirer du panier\n      this.removeFromCartAction(selectedCartItem);\n      // Retrait également du panier local de la page\n      this.cartItems.splice(index, 1);\n    },\n    clearCart() {\n      // Logique pour vider le panier\n      this.cartItems = [];\n      this.clearCartAction();\n    },\n    checkout() {\n      // Logique pour finaliser l'achat\n      this.checkoutAction(this.cartItems);\n    }\n  }\n};","map":{"version":3,"names":["ItemsList","BasketList","mapActions","components","mounted","initPage","data","viruses","cartItems","checkedViruses","checkedCartItems","methods","getAllViruses","$store","state","console","log","toggleVirusCheckbox","index","findIndex","add","splice","addToCart","selectedVirus","quantity","addToCartAction","virus","push","toggleCartItemCheckbox","removeFromCart","selectedCartItem","removeFromCartAction","clearCart","clearCartAction","checkout","checkoutAction"],"sources":["src/views/ShopBuy.vue"],"sourcesContent":["<!--ShopBuy.vue-->\r\n<template>\r\n  <div>\r\n    <p>{{this.checkedViruses}}</p>\r\n    <div class=\"shop-container\">\r\n      <div class=\"items-list\">\r\n        <ItemsList\r\n            :items=\"viruses\"\r\n            :checked=\"checkedViruses\"\r\n            @checked-changed=\"toggleVirusCheckbox\"\r\n            @item-button-clicked=\"addToCart\"\r\n            @list-button-clicked=\"checkout\"\r\n        />\r\n      </div>\r\n      <div class=\"basket-list\">\r\n        <BasketList\r\n            :items=\"cartItems\"\r\n            :checked=\"checkedCartItems\"\r\n            @checked-changed=\"toggleCartItemCheckbox\"\r\n            @item-button-clicked=\"removeFromCart\"\r\n            @list-button-clicked=\"clearCart\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ItemsList from '../../src/components/ItemsList.vue';\r\nimport BasketList from '../../src/components/BasketList.vue';\r\nimport { mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  components: {\r\n    ItemsList,\r\n    BasketList,\r\n  },\r\n\r\n  mounted() {\r\n    this.initPage();\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      viruses: [],\r\n      cartItems: [],\r\n      checkedViruses: [],\r\n      checkedCartItems: [],\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions([\"getAllViruses\", \"addToCartAction\", \"removeFromCartAction\", \"clearCartAction\", \"checkoutAction\"]),\r\n\r\n    async initPage() {\r\n      await this.getAllViruses();\r\n      this.viruses = this.$store.state.viruses;\r\n      console.log(this.viruses);\r\n    },\r\n\r\n    /*toggleVirusCheckbox(index) {\r\n      const indexOfVirus = this.checkedViruses.indexOf(index);\r\n      if (indexOfVirus === -1) {\r\n        this.checkedViruses.push(index);\r\n      } else {\r\n        this.checkedViruses.splice(indexOfVirus, 1);\r\n      }\r\n    },*/\r\n    toggleVirusCheckbox(index) {\r\n      //this.$set(this.checkedViruses, index, !this.checkedViruses[index]);\r\n      if (!this.checkedViruses.findIndex(index)) {\r\n        this.checkedViruses.add(index);\r\n      } else {\r\n        this.checkedViruses.splice(index);\r\n      }\r\n    },\r\n\r\n    addToCart(index) {\r\n      const selectedVirus = this.viruses[index];\r\n      const quantity = 1; // Vous pouvez ajuster cela en fonction de la quantité que vous souhaitez ajouter au panier\r\n      console.log(\"Selected Virus:\", selectedVirus);\r\n      // Appel de l'action du store pour ajouter au panier\r\n      this.addToCartAction({ virus: selectedVirus, quantity });\r\n      // Ajout également au panier local de la page\r\n      console.log(\"Before Cart Items:\", this.cartItems);\r\n      this.cartItems.push({ virus: selectedVirus, quantity });\r\n      console.log(\"After Cart Items:\", this.cartItems);\r\n    },\r\n\r\n    toggleCartItemCheckbox(index) {\r\n      // Logique pour gérer la sélection/désélection des articles dans le panier\r\n      this.checkedCartItems[index] = !this.checkedCartItems[index];\r\n    },\r\n\r\n    removeFromCart(index) {\r\n      // Logique pour retirer un article du panier\r\n      const selectedCartItem = this.cartItems[index];\r\n      // Appel de l'action du store pour retirer du panier\r\n      this.removeFromCartAction(selectedCartItem);\r\n      // Retrait également du panier local de la page\r\n      this.cartItems.splice(index, 1);\r\n    },\r\n\r\n    clearCart() {\r\n      // Logique pour vider le panier\r\n      this.cartItems = [];\r\n      this.clearCartAction();\r\n    },\r\n\r\n    checkout() {\r\n      // Logique pour finaliser l'achat\r\n      this.checkoutAction(this.cartItems);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.shop-container {\r\n  display: flex;\r\n}\r\n\r\n.items-list {\r\n  flex: 1;\r\n  margin-right: 20px;\r\n}\r\n\r\n.basket-list {\r\n  flex: 1;\r\n}\r\n</style>"],"mappings":";AA4BA,OAAAA,SAAA;AACA,OAAAC,UAAA;AACA,SAAAC,UAAA;AAEA;EACAC,UAAA;IACAH,SAAA;IACAC;EACA;EAEAG,QAAA;IACA,KAAAC,QAAA;EACA;EAEAC,KAAA;IACA;MACAC,OAAA;MACAC,SAAA;MACAC,cAAA;MACAC,gBAAA;IACA;EACA;EAEAC,OAAA;IACA,GAAAT,UAAA;IAEA,MAAAG,SAAA;MACA,WAAAO,aAAA;MACA,KAAAL,OAAA,QAAAM,MAAA,CAAAC,KAAA,CAAAP,OAAA;MACAQ,OAAA,CAAAC,GAAA,MAAAT,OAAA;IACA;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAU,oBAAAC,KAAA;MACA;MACA,UAAAT,cAAA,CAAAU,SAAA,CAAAD,KAAA;QACA,KAAAT,cAAA,CAAAW,GAAA,CAAAF,KAAA;MACA;QACA,KAAAT,cAAA,CAAAY,MAAA,CAAAH,KAAA;MACA;IACA;IAEAI,UAAAJ,KAAA;MACA,MAAAK,aAAA,QAAAhB,OAAA,CAAAW,KAAA;MACA,MAAAM,QAAA;MACAT,OAAA,CAAAC,GAAA,oBAAAO,aAAA;MACA;MACA,KAAAE,eAAA;QAAAC,KAAA,EAAAH,aAAA;QAAAC;MAAA;MACA;MACAT,OAAA,CAAAC,GAAA,4BAAAR,SAAA;MACA,KAAAA,SAAA,CAAAmB,IAAA;QAAAD,KAAA,EAAAH,aAAA;QAAAC;MAAA;MACAT,OAAA,CAAAC,GAAA,2BAAAR,SAAA;IACA;IAEAoB,uBAAAV,KAAA;MACA;MACA,KAAAR,gBAAA,CAAAQ,KAAA,UAAAR,gBAAA,CAAAQ,KAAA;IACA;IAEAW,eAAAX,KAAA;MACA;MACA,MAAAY,gBAAA,QAAAtB,SAAA,CAAAU,KAAA;MACA;MACA,KAAAa,oBAAA,CAAAD,gBAAA;MACA;MACA,KAAAtB,SAAA,CAAAa,MAAA,CAAAH,KAAA;IACA;IAEAc,UAAA;MACA;MACA,KAAAxB,SAAA;MACA,KAAAyB,eAAA;IACA;IAEAC,SAAA;MACA;MACA,KAAAC,cAAA,MAAA3B,SAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}