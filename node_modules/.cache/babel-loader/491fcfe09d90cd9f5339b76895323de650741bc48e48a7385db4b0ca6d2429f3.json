{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'CheckedList',\n  props: {\n    data: Array,\n    fields: Array,\n    itemCheck: Boolean,\n    checked: Array,\n    itemButton: Object,\n    listButton: Object,\n    itemAmount: Boolean\n  },\n  data() {\n    return {\n      amountInput: Array(this.data.length).fill(1)\n    };\n  },\n  methods: {\n    toggleCheckbox(index) {\n      this.$emit('checked-changed', index);\n    },\n    itemButtonClick(index) {\n      this.$emit('item-button-clicked', {\n        index,\n        amount: this.itemAmount ? this.amountInput[index] : undefined\n      });\n    },\n    listButtonClick() {\n      const selectedItems = this.checked.reduce((acc, isSelected, index) => {\n        if (isSelected) {\n          acc.push({\n            index,\n            amount: this.itemAmount ? this.amountInput[index] : undefined\n          });\n          // Désélectionner l'item\n          this.$set(this.checked, index, false);\n        }\n        return acc;\n      }, []);\n      this.$emit('list-button-clicked', selectedItems);\n    },\n    displayItem(item) {\n      return this.fields.map(field => item[field]).join(' ');\n    },\n    updateAmount(index) {\n      // Mettre à jour la valeur du champ numérique dans le tableau\n      this.$emit('amount-updated', {\n        index,\n        amount: this.amountInput[index]\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","Array","fields","itemCheck","Boolean","checked","itemButton","Object","listButton","itemAmount","amountInput","length","fill","methods","toggleCheckbox","index","$emit","itemButtonClick","amount","undefined","listButtonClick","selectedItems","reduce","acc","isSelected","push","$set","displayItem","item","map","field","join","updateAmount"],"sources":["src/components/CheckedList.vue"],"sourcesContent":["<!-- CheckedList.vue -->\n<template>\n    <div>\n        <div v-for=\"(item, index) in data\" :key=\"index\">\n            <input\n                    v-if=\"itemCheck\"\n                    type=\"checkbox\"\n                    :checked=\"checked[index]\"\n                    @change=\"toggleCheckbox(index)\"\n            />\n            {{ displayItem(item) }}\n            <input\n                    v-if=\"itemAmount\"\n                    type=\"number\"\n                    v-model=\"amountInput[index]\"\n                    min=\"1\"\n                    @input=\"updateAmount(index)\"\n            />\n            <button v-if=\"itemButton.show\" @click=\"itemButtonClick(index)\">\n                {{ itemButton.text }}\n            </button>\n        </div>\n        <button v-if=\"listButton.show\" @click=\"listButtonClick\">{{ listButton.text }}</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'CheckedList',\n    props: {\n        data: Array,\n        fields: Array,\n        itemCheck: Boolean,\n        checked: Array,\n        itemButton: Object,\n        listButton: Object,\n        itemAmount: Boolean,\n    },\n    data() {\n        return {\n            amountInput: Array(this.data.length).fill(1),\n        };\n    },\n    methods: {\n        toggleCheckbox(index) {\n            this.$emit('checked-changed', index);\n        },\n        itemButtonClick(index) {\n            this.$emit('item-button-clicked', {\n                index,\n                amount: this.itemAmount ? this.amountInput[index] : undefined,\n            });\n        },\n        listButtonClick() {\n            const selectedItems = this.checked.reduce((acc, isSelected, index) => {\n                if (isSelected) {\n                    acc.push({\n                        index,\n                        amount: this.itemAmount ? this.amountInput[index] : undefined,\n                    });\n                    // Désélectionner l'item\n                    this.$set(this.checked, index, false);\n                }\n                return acc;\n            }, []);\n            this.$emit('list-button-clicked', selectedItems);\n        },\n        displayItem(item) {\n            return this.fields.map((field) => item[field]).join(' ');\n        },\n        updateAmount(index) {\n            // Mettre à jour la valeur du champ numérique dans le tableau\n            this.$emit('amount-updated', {\n                index,\n                amount: this.amountInput[index],\n            });\n        },\n    },\n};\n</script>\n"],"mappings":";AA2BA;EACAA,IAAA;EACAC,KAAA;IACAC,IAAA,EAAAC,KAAA;IACAC,MAAA,EAAAD,KAAA;IACAE,SAAA,EAAAC,OAAA;IACAC,OAAA,EAAAJ,KAAA;IACAK,UAAA,EAAAC,MAAA;IACAC,UAAA,EAAAD,MAAA;IACAE,UAAA,EAAAL;EACA;EACAJ,KAAA;IACA;MACAU,WAAA,EAAAT,KAAA,MAAAD,IAAA,CAAAW,MAAA,EAAAC,IAAA;IACA;EACA;EACAC,OAAA;IACAC,eAAAC,KAAA;MACA,KAAAC,KAAA,oBAAAD,KAAA;IACA;IACAE,gBAAAF,KAAA;MACA,KAAAC,KAAA;QACAD,KAAA;QACAG,MAAA,OAAAT,UAAA,QAAAC,WAAA,CAAAK,KAAA,IAAAI;MACA;IACA;IACAC,gBAAA;MACA,MAAAC,aAAA,QAAAhB,OAAA,CAAAiB,MAAA,EAAAC,GAAA,EAAAC,UAAA,EAAAT,KAAA;QACA,IAAAS,UAAA;UACAD,GAAA,CAAAE,IAAA;YACAV,KAAA;YACAG,MAAA,OAAAT,UAAA,QAAAC,WAAA,CAAAK,KAAA,IAAAI;UACA;UACA;UACA,KAAAO,IAAA,MAAArB,OAAA,EAAAU,KAAA;QACA;QACA,OAAAQ,GAAA;MACA;MACA,KAAAP,KAAA,wBAAAK,aAAA;IACA;IACAM,YAAAC,IAAA;MACA,YAAA1B,MAAA,CAAA2B,GAAA,CAAAC,KAAA,IAAAF,IAAA,CAAAE,KAAA,GAAAC,IAAA;IACA;IACAC,aAAAjB,KAAA;MACA;MACA,KAAAC,KAAA;QACAD,KAAA;QACAG,MAAA,OAAAR,WAAA,CAAAK,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}