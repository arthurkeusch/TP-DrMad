{"ast":null,"code":"import ShopService from '../services/shop.service';\nexport default {\n  // state = les données centralisées\n  state: () => ({\n    viruses: [],\n    shopUser: null\n  }),\n  // mutations = fonctions synchrones pour mettre à jour le state (!!! interdit de modifier directement le state)\n  mutations: {\n    updateViruses(state, viruses) {\n      state.viruses = viruses;\n    },\n    updateShopUser(state, user) {\n      state.shopUser = user;\n    }\n  },\n  // actions = fonctions asynchrone pour mettre à jour le state, en faisant appel aux mutations, via la fonction commit()\n  actions: {\n    async shopLogin({\n      commit\n    }, data) {\n      console.log('login');\n      let response = await ShopService.shopLogin(data);\n      if (response.error === 0) {\n        commit('updateShopUser', response.data);\n      } else {\n        console.log(response.data);\n      }\n    },\n    async getAllViruses({\n      commit\n    }) {\n      console.log('récupération des viruses');\n      let response = await ShopService.getAllViruses();\n      if (response.error === 0) {\n        commit('updateViruses', response.data);\n      } else {\n        console.log(response.data);\n      }\n    }\n  }\n};","map":{"version":3,"names":["ShopService","state","viruses","shopUser","mutations","updateViruses","updateShopUser","user","actions","shopLogin","commit","data","console","log","response","error","getAllViruses"],"sources":["/home/arthur/Documents/BUT/BUT2/Dev web/S3/Front-end/S3/tp4_v2/src/store/shop.js"],"sourcesContent":["import ShopService from '../services/shop.service'\n\nexport default {\n    // state = les données centralisées\n    state: () => ({\n        viruses: [],\n        shopUser: null,\n    }),\n    // mutations = fonctions synchrones pour mettre à jour le state (!!! interdit de modifier directement le state)\n    mutations: {\n        updateViruses(state, viruses) {\n            state.viruses = viruses\n        },\n        updateShopUser(state, user) {\n            state.shopUser = user\n        },\n    },\n    // actions = fonctions asynchrone pour mettre à jour le state, en faisant appel aux mutations, via la fonction commit()\n    actions: {\n        async shopLogin({commit}, data) {\n            console.log('login');\n            let response = await ShopService.shopLogin(data)\n            if (response.error === 0) {\n                commit('updateShopUser', response.data)\n            }\n            else {\n                console.log(response.data)\n            }\n        },\n        async getAllViruses({commit}) {\n            console.log('récupération des viruses');\n            let response = await ShopService.getAllViruses()\n            if (response.error === 0) {\n                commit('updateViruses', response.data)\n            }\n            else {\n                console.log(response.data)\n            }\n        },\n    }\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,0BAA0B;AAElD,eAAe;EACX;EACAC,KAAK,EAAEA,CAAA,MAAO;IACVC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE;EACd,CAAC,CAAC;EACF;EACAC,SAAS,EAAE;IACPC,aAAaA,CAACJ,KAAK,EAAEC,OAAO,EAAE;MAC1BD,KAAK,CAACC,OAAO,GAAGA,OAAO;IAC3B,CAAC;IACDI,cAAcA,CAACL,KAAK,EAAEM,IAAI,EAAE;MACxBN,KAAK,CAACE,QAAQ,GAAGI,IAAI;IACzB;EACJ,CAAC;EACD;EACAC,OAAO,EAAE;IACL,MAAMC,SAASA,CAAC;MAACC;IAAM,CAAC,EAAEC,IAAI,EAAE;MAC5BC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpB,IAAIC,QAAQ,GAAG,MAAMd,WAAW,CAACS,SAAS,CAACE,IAAI,CAAC;MAChD,IAAIG,QAAQ,CAACC,KAAK,KAAK,CAAC,EAAE;QACtBL,MAAM,CAAC,gBAAgB,EAAEI,QAAQ,CAACH,IAAI,CAAC;MAC3C,CAAC,MACI;QACDC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACH,IAAI,CAAC;MAC9B;IACJ,CAAC;IACD,MAAMK,aAAaA,CAAC;MAACN;IAAM,CAAC,EAAE;MAC1BE,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC,IAAIC,QAAQ,GAAG,MAAMd,WAAW,CAACgB,aAAa,CAAC,CAAC;MAChD,IAAIF,QAAQ,CAACC,KAAK,KAAK,CAAC,EAAE;QACtBL,MAAM,CAAC,eAAe,EAAEI,QAAQ,CAACH,IAAI,CAAC;MAC1C,CAAC,MACI;QACDC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACH,IAAI,CAAC;MAC9B;IACJ;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}