{"ast":null,"code":"export default {\n  name: \"CheckedList\",\n  props: {\n    data: Array,\n    // les données sources\n    fields: Array,\n    // le tableau contenant le nom des champs à afficher\n    itemCheck: Boolean,\n    // s'il y a des case à cocher\n    checked: Array,\n    // le tableau des cases cochées\n    itemButton: Object,\n    // l'objet pour les boutons d'items\n    listButton: Object // l'objet pour le bouton de liste\n  },\n  data: () => {\n    return {};\n  }\n};","map":{"version":3,"names":["name","props","data","Array","fields","itemCheck","Boolean","checked","itemButton","Object","listButton"],"sources":["src/components/CheckedList.vue"],"sourcesContent":["<template>\n  <div>\n    <p v-for=\"(item, indexRow) in data\" :key=\"indexRow\">\n      <input type=\"checkbox\"\n             v-if=\"itemCheck\"\n             :checked=\"checked[indexRow]\"\n             @click=\"$emit('checked-changed',indexRow)\"\n      >\n      <span v-for=\"(field, indexCol) in fields\" :key=\"indexCol\">\n        {{item[field]}}\n      </span>\n      <button v-if=\"itemButton && itemButton.show\" color=\"grey\" @click=\"$emit('item-button-clicked',indexRow)\">{{itemButton.text}}</button>\n    </p>\n    <button v-if=\"listButton && listButton.show\" color=\"green\" @click=\"$emit('list-button-clicked')\">{{listButton.text}}</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CheckedList\",\n  props: {\n    data: Array, // les données sources\n    fields: Array, // le tableau contenant le nom des champs à afficher\n    itemCheck: Boolean, // s'il y a des case à cocher\n    checked: Array, // le tableau des cases cochées\n    itemButton: Object, // l'objet pour les boutons d'items\n    listButton: Object, // l'objet pour le bouton de liste\n  },\n  data : () => {\n    return {\n    }\n  }\n}\n</script>"],"mappings":"AAkBA;EACAA,IAAA;EACAC,KAAA;IACAC,IAAA,EAAAC,KAAA;IAAA;IACAC,MAAA,EAAAD,KAAA;IAAA;IACAE,SAAA,EAAAC,OAAA;IAAA;IACAC,OAAA,EAAAJ,KAAA;IAAA;IACAK,UAAA,EAAAC,MAAA;IAAA;IACAC,UAAA,EAAAD,MAAA;EACA;EACAP,IAAA,EAAAA,CAAA;IACA,QACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}